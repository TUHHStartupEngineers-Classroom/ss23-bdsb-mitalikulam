---
title: "Data Visualization"
author: "Mitali Kulam"
format: "html"
editor: "visual"
---

## Load the Libraries

```{r}
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
library(ggrepel)
library(scales)
library(maps)
```

## Challenge 1 - Goal: Map the time course of the cumulative Covid-19 cases!

```{r}
covid_data_tbl <- read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")
```

# Filter the data

```{r}
selected_countries <- c("Spain", "United States", "United Kingdom", "France", "Germany")

filtered_data <- covid_data_tbl %>%
  filter(location %in% selected_countries) %>%
  mutate(date = as.Date(date))


cumulative_cases <- filtered_data %>%
  group_by(location) %>%
  mutate(cumulative_cases_millions = total_cases / 1e6)
```

# Create the line plot with the cumulative cases over time

```{r}
ggplot(cumulative_cases, aes(x = date, y = cumulative_cases_millions, color = location)) +
  geom_line(size = 1) +
  scale_x_date(date_labels = "%b %Y", date_breaks = "1 month") +
  scale_y_continuous(labels = scales::comma) +
  labs(title = "COVID-19 cases worldwide",
       x = "Month and Year",
       y = "Cumulative Cases (Millions)") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "bottom",
        axis.text.x = element_text(angle = 45, hjust = 1)) +
  geom_label_repel(data = filter(cumulative_cases, date == max(date)),
                   aes(label = paste(location, scales::comma(cumulative_cases_millions), sep = " - ")),
                   nudge_x = 10,
                   direction = "y",
                   color = "black",
                   size = 3,
                   box.padding = 0.5,
                   box.margin = 0.5,
                   segment.color = "black")

```

## Visualize the distribution of the mortality rate (deaths / population)

# Read the data and adjust country names

```{r}
world <- map_data("world")
covid_data_tbl <- read_csv("https://covid.ourworldindata.org/data/owid-covid-data.csv")

adjusted_data <- covid_data_tbl %>% 
  mutate(location = case_when(
    location == "United Kingdom" ~ "UK",
    location == "United States" ~ "USA",
    location == "Democratic Republic of Congo" ~ "Democratic Republic of the Congo",
    TRUE ~ location
  )) %>%
  distinct()
```

# Group the adjusted data by location and keep the latest entry for each location

```{r}
adjusted_data_latest <- adjusted_data %>%
  group_by(location) %>%
  slice_max(date, n = 1) %>%
  ungroup()
```

# Join the latitude/longitude data with the COVID-19 data

```{r}
plot_data <- left_join(world, adjusted_data_latest, by = c("region" = "location"))
```

# Visualize the distribution of the mortality rate or case-fatality rate

```{r}
ggplot() +
  geom_polygon(data = plot_data, aes(x = long, y = lat, group = group, fill = total_deaths / population), color = "black") +
  scale_fill_gradient(low = "red", high = "black", na.value = "gray", guide = "legend") +
  labs(fill = "Mortality Rate") +
  ggtitle("Distribution of Mortality Rate") +
  theme_void()
```
